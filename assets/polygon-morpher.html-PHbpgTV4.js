import{_ as r,r as s,o as l,c,a as n,b as e,d as a,w as i,e as u}from"./app-WXFCxs9o.js";const d={},m=n("h1",{id:"polygonmorpher",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#polygonmorpher","aria-hidden":"true"},"#"),e(" PolygonMorpher")],-1),k={href:"https://www.npmjs.com/package/@naivemap/mapbox-gl-polygon-morpher",target:"_blank",rel:"noopener noreferrer"},v=u(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># yarn</span>
<span class="token function">yarn</span> <span class="token function">add</span> @naivemap/mapbox-gl-polygon-morpher
<span class="token comment"># 或 npm</span>
<span class="token function">npm</span> i @naivemap/mapbox-gl-polygon-morpher
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> PolygonMorpher <span class="token keyword">from</span> <span class="token string">&#39;@naivemap/mapbox-gl-polygon-morpher&#39;</span>

<span class="token comment">// 1. 构造一个 PolygonMorpher</span>
<span class="token keyword">const</span> geojsonSource <span class="token operator">=</span> map<span class="token punctuation">.</span><span class="token function">getSource</span><span class="token punctuation">(</span><span class="token string">&#39;geojson-source&#39;</span><span class="token punctuation">)</span> <span class="token comment">// 只需要一个 GeoJSON 数据源</span>
<span class="token keyword">const</span> polygonMorpher <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">PolygonMorpher</span><span class="token punctuation">(</span>geojsonSource<span class="token punctuation">)</span>

<span class="token comment">// 2. 变化到新的多边形</span>
<span class="token keyword">const</span> newPolygonFeature <span class="token operator">=</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Feature&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">geometry</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;Polygon&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">coordinates</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span>
polygonMorpher<span class="token punctuation">.</span><span class="token function">morph</span><span class="token punctuation">(</span>newPolygonFeature<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function g(y,h){const o=s("ExternalLinkIcon"),p=s("common-code-view"),t=s("ClientOnly");return l(),c("div",null,[m,n("p",null,[n("a",k,[e("@naivemap/mapbox-gl-polygon-morpher"),a(o)]),e(" 实现多边形平滑变化效果。")]),v,a(t,null,{default:i(()=>[a(p,{name:"plugins-polygon-morpher"})]),_:1})])}const b=r(d,[["render",g],["__file","polygon-morpher.html.vue"]]);export{b as default};
