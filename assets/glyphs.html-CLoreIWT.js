import{_ as p,c as t,a as e,e as s,o}from"./app-Oi8ZZMZx.js";const l={},c={class:"hint-container warning"},i=["src"];function u(a,n){return o(),t("div",null,[n[2]||(n[2]=e(`<h1 id="字体" tabindex="-1"><a class="header-anchor" href="#字体"><span>字体</span></a></h1><blockquote><p><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/glyphs/" target="_blank" rel="noopener noreferrer">glyphs</a></p></blockquote><p>如果图层样式中有使用 <code>text-field</code> 属性，则必须设置该属性。</p><p>如需使用自定义字体，可在 <a href="https://studio.mapbox.com/" target="_blank" rel="noopener noreferrer">Mapbox Studio</a> 上传 <code>.TTF</code> 或者 <code>.OTF</code> 字体。也可使用 <a href="https://github.com/mapbox/node-fontnik" target="_blank" rel="noopener noreferrer">mapbox/node-fontnik</a> 工具生成 <code>PBF</code> 格式字体。</p><p>使用方法如下：</p><div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 克隆项目并安装</span></span>
<span class="line"><span class="token function">git</span> clone git@github.com:mapbox/node-fontnik.git</span>
<span class="line"><span class="token builtin class-name">cd</span> node-fontnik <span class="token operator">&amp;</span> <span class="token function">npm</span> i</span>
<span class="line"><span class="token comment"># 进入 bin 目录，转换字体文件</span></span>
<span class="line"><span class="token builtin class-name">cd</span> bin</span>
<span class="line"><span class="token function">node</span> ./build-glyphs /home/fonts/open-sans/OpenSans-Regular.ttf ./glyphs/OpenSans Regular</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可使用下面的代码生成：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> fontnik <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fontnik&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">convert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fileName<span class="token punctuation">,</span> outputDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> font <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">output2pbf</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> outputDir<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">output2pbf</span><span class="token punctuation">(</span><span class="token parameter">font<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> outputDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done!&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  fontnik<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">font</span><span class="token operator">:</span> font<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">start</span><span class="token operator">:</span> start<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">end</span><span class="token operator">:</span> end<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">var</span> outputFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> outputDir <span class="token operator">+</span> start <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> end <span class="token operator">+</span> <span class="token string">&#39;.pbf&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>outputFilePath<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">output2pbf</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">255</span><span class="token punctuation">,</span> outputDir<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">convert</span><span class="token punctuation">(</span><span class="token string">&#39;./fonts/open-sans/OpenSans-Regular.ttf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./glyphs/OpenSans Regular/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参考：<a href="https://www.jianshu.com/p/23634e54487e" target="_blank" rel="noopener noreferrer">mapbox/node-fontnik 工具使用介绍</a></p></blockquote>`,9)),s("div",c,[n[0]||(n[0]=s("p",{class:"hint-container-title"},"注意",-1)),n[1]||(n[1]=s("p",null,"经测试，上面几种方法（包括在 Mapbox Studio 中上传的字体）生成的字体对中文不生效，中文字体还是会显示为默认字体，如下：",-1)),s("img",{src:a.$withBase("/assets/images/fonts.png"),width:"120"},null,8,i)])])}const k=p(l,[["render",u],["__file","glyphs.html.vue"]]),d=JSON.parse('{"path":"/style-spec/glyphs.html","title":"字体","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1656653672000,"contributors":[{"name":"huanglii","username":"huanglii","email":"li.huangli@qq.com","commits":4,"url":"https://github.com/huanglii"},{"name":"huanglii","username":"huanglii","email":"849151701@qq.com","commits":5,"url":"https://github.com/huanglii"},{"name":"黄俐","username":"黄俐","email":"li.huangli@qq.com","commits":2,"url":"https://github.com/黄俐"}]},"filePathRelative":"style-spec/glyphs.md"}');export{k as comp,d as data};
