import{_ as p,r as c,o as l,c as i,d as n,w as r,a as e,b as t,e as u}from"./app-WXFCxs9o.js";const d={},h=e("h1",{id:"高亮",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#高亮","aria-hidden":"true"},"#"),t(" 高亮")],-1),_=e("p",null,"Mapbox GL JS 中有两种方法可以实现要素高亮效果。",-1),m=e("h2",{id:"高亮图层",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#高亮图层","aria-hidden":"true"},"#"),t(" 高亮图层")],-1),f=e("p",null,[t("第一种方法是额外添加一个高亮图层，数据源与原图层一致，默认通过设置 "),e("code",null,"filter"),t(" 不显示任何要素。在需要高亮的时候（如鼠标移入、点击某要素时）设置仅显示某要素。")],-1),k=e("h2",{id:"要素状态",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#要素状态","aria-hidden":"true"},"#"),t(" 要素状态")],-1),g={href:"https://docs.mapbox.com/mapbox-gl-js/api/map/#map#setfeaturestate",target:"_blank",rel:"noopener noreferrer"},b={href:"https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#feature-state",target:"_blank",rel:"noopener noreferrer"},x={class:"custom-container warning"},v=e("p",{class:"custom-container-title"},"注意",-1),y=e("code",null,"map.setFeatureState",-1),j=e("code",null,"id",-1),w={href:"https://docs.mapbox.com/mapbox-gl-js/api/map/#map#setfeaturestate",target:"_blank",rel:"noopener noreferrer"},C={href:"https://docs.mapbox.com/mapbox-gl-js/api/map/#map#setfeaturestate",target:"_blank",rel:"noopener noreferrer"},L=e("code",null,"paint",-1),N={href:"https://docs.mapbox.com/mapbox-gl-js/example/hover-styles/",target:"_blank",rel:"noopener noreferrer"},S=u(`<h2 id="布局属性" tabindex="-1"><a class="header-anchor" href="#布局属性" aria-hidden="true">#</a> 布局属性</h2><p>前面提到要素状态只能用于绘制属性，对于符号 (<code>symbol</code>) 类型图层，图标、文本等都是布局 (<code>layout</code>) 属性，无法使用要素状态来实现高亮效果。这时可通过表达式设置高亮要素/正常要素的图标等布局属性，<strong>前提是数据有 <code>id</code> 或者唯一属性</strong>。</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>map<span class="token punctuation">.</span><span class="token function">setLayoutProperty</span><span class="token punctuation">(</span><span class="token string">&#39;city&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;icon-image&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;match&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;id&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> e<span class="token punctuation">.</span>features<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>id<span class="token punctuation">,</span> <span class="token string">&#39;i-star-red&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;i-star-blue&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3);function V(B,E){const s=c("common-code-view"),o=c("ClientOnly"),a=c("ExternalLinkIcon");return l(),i("div",null,[h,_,m,f,n(o,null,{default:r(()=>[n(s,{name:"starter-tutorials-highlight-1"})]),_:1}),k,e("p",null,[t("第二种方法，通过给要素"),e("a",g,[t("设置要素状态 (feature-state)"),n(a)]),t("，再结合"),e("a",b,[t("表达式"),n(a)]),t("给该要素设置不同的渲染效果（颜色、透明度和线条粗细等）。")]),e("div",x,[v,e("ul",null,[e("li",null,[y,t(" 方法只能用于有 "),j,t(" 属性的数据源。详见："),e("a",w,[t("setFeatureState"),n(a)])]),e("li",null,[e("a",C,[t("要素状态 (feature-state)"),n(a)]),t(" 只能与支持数据驱动的绘制 ("),L,t(") 属性一起使用。")])])]),n(o,null,{default:r(()=>[n(s,{name:"starter-tutorials-highlight-2"})]),_:1}),e("blockquote",null,[e("p",null,[t("鼠标悬停效果："),e("a",N,[t("Create a hover effect"),n(a)])])]),S,n(o,null,{default:r(()=>[n(s,{name:"starter-tutorials-highlight-3"})]),_:1})])}const I=p(d,[["render",V],["__file","highlight.html.vue"]]);export{I as default};
