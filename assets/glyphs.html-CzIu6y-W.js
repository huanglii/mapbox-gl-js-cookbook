import{_ as o,c as l,e as s,f as a,b as i,a as e,o as c,r as u}from"./app-D53rVwic.js";const r={},k={class:"hint-container warning"},d=["src"],m=["src"];function v(p,n){const t=u("Badge");return c(),l("div",null,[n[8]||(n[8]=s("h1",{id:"字体",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#字体"},[s("span",null,"字体")])],-1)),n[9]||(n[9]=s("blockquote",null,[s("p",null,[s("a",{href:"https://docs.mapbox.com/mapbox-gl-js/style-spec/glyphs/",target:"_blank",rel:"noopener noreferrer"},"glyphs")])],-1)),n[10]||(n[10]=s("p",null,[a("如果图层样式中有使用 "),s("code",null,"text-field"),a(" 属性，则必须设置该属性。")],-1)),n[11]||(n[11]=s("p",null,"如需使用自定义字体，有几种方法：",-1)),s("ol",null,[n[3]||(n[3]=s("li",null,[a("在 "),s("a",{href:"https://studio.mapbox.com/",target:"_blank",rel:"noopener noreferrer"},"Mapbox Studio"),a(" 上传 "),s("code",null,".TTF"),a(" 或者 "),s("code",null,".OTF"),a(" 字体。")],-1)),s("li",null,[n[0]||(n[0]=a("使用 ")),n[1]||(n[1]=s("a",{href:"https://maplibre.org/font-maker/",target:"_blank",rel:"noopener noreferrer"},"Font Maker",-1)),n[2]||(n[2]=a("。")),i(t,{type:"important",text:"推荐",vertical:"top"})]),n[4]||(n[4]=s("li",null,[a("使用 "),s("a",{href:"https://github.com/mapbox/node-fontnik",target:"_blank",rel:"noopener noreferrer"},"mapbox/node-fontnik"),a(" 工具生成。使用方法如下：")],-1))]),n[12]||(n[12]=e(`<div class="language-bash line-numbers-mode" data-highlighter="prismjs" data-ext="sh" data-title="sh"><pre><code><span class="line"><span class="token comment"># 克隆项目并安装</span></span>
<span class="line"><span class="token function">git</span> clone git@github.com:mapbox/node-fontnik.git</span>
<span class="line"><span class="token builtin class-name">cd</span> node-fontnik <span class="token operator">&amp;</span> <span class="token function">npm</span> i</span>
<span class="line"><span class="token comment"># 进入 bin 目录，转换字体文件</span></span>
<span class="line"><span class="token builtin class-name">cd</span> bin</span>
<span class="line"><span class="token function">node</span> ./build-glyphs /home/fonts/open-sans/OpenSans-Regular.ttf ./glyphs/OpenSans Regular</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可使用下面的代码生成：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token keyword">var</span> fontnik <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fontnik&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span></span>
<span class="line"><span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">var</span> <span class="token function-variable function">convert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fileName<span class="token punctuation">,</span> outputDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">var</span> font <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">)</span></span>
<span class="line">  <span class="token function">output2pbf</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> outputDir<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token keyword">function</span> <span class="token function">output2pbf</span><span class="token punctuation">(</span><span class="token parameter">font<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> outputDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done!&#39;</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token keyword">return</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  fontnik<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span></span>
<span class="line">    <span class="token punctuation">{</span></span>
<span class="line">      <span class="token literal-property property">font</span><span class="token operator">:</span> font<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">start</span><span class="token operator">:</span> start<span class="token punctuation">,</span></span>
<span class="line">      <span class="token literal-property property">end</span><span class="token operator">:</span> end<span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">var</span> outputFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> outputDir <span class="token operator">+</span> start <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> end <span class="token operator">+</span> <span class="token string">&#39;.pbf&#39;</span><span class="token punctuation">)</span></span>
<span class="line">      fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>outputFilePath<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">          console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">          <span class="token function">output2pbf</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">255</span><span class="token punctuation">,</span> outputDir<span class="token punctuation">)</span></span>
<span class="line">        <span class="token punctuation">}</span></span>
<span class="line">      <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span>
<span class="line"><span class="token function">convert</span><span class="token punctuation">(</span><span class="token string">&#39;./fonts/open-sans/OpenSans-Regular.ttf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./glyphs/OpenSans Regular/&#39;</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参考：<a href="https://www.jianshu.com/p/23634e54487e" target="_blank" rel="noopener noreferrer">mapbox/node-fontnik 工具使用介绍</a></p></blockquote>`,4)),s("div",k,[n[5]||(n[5]=s("p",{class:"hint-container-title"},"注意",-1)),n[6]||(n[6]=s("p",null,"经测试，上面几种方法（包括在 Mapbox Studio 中上传的字体）生成的字体对中文不生效，中文字体会显示为默认字体，如下：",-1)),s("img",{src:p.$withBase("/assets/images/fonts.png"),width:"200"},null,8,d),n[7]||(n[7]=e(`<p>原因在于 Mapbox GL JS 默认使用本地字体渲染表意文字，可在初始化地图时将 <code>localFontFamily</code> 和 <code>localIdeographFontFamily</code> 设置为 <code>undefined</code>，即可使用生成的中文字体。感谢 <a href="https://github.com/huanglii/mapbox-gl-js-cookbook/issues/28" target="_blank" rel="noopener noreferrer">mrxuanz</a></p><div class="language-typescript line-numbers-mode" data-highlighter="prismjs" data-ext="ts" data-title="ts"><pre><code><span class="line"><span class="token keyword">const</span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mapboxgl</span><span class="token punctuation">.</span><span class="token function">Map</span><span class="token punctuation">(</span><span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// ...</span></span>
<span class="line">  localFontFamily<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line">  localIdeographFontFamily<span class="token operator">:</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2)),s("img",{src:p.$withBase("/assets/images/fonts1.png"),width:"200"},null,8,m)])])}const f=o(r,[["render",v],["__file","glyphs.html.vue"]]),g=JSON.parse('{"path":"/style-spec/glyphs.html","title":"字体","lang":"zh-CN","frontmatter":{},"headers":[],"git":{"updatedTime":1734428643000,"contributors":[{"name":"huanglii","username":"huanglii","email":"naivemap@163.com","commits":1,"url":"https://github.com/huanglii"},{"name":"huanglii","username":"huanglii","email":"li.huangli@qq.com","commits":4,"url":"https://github.com/huanglii"},{"name":"huanglii","username":"huanglii","email":"849151701@qq.com","commits":5,"url":"https://github.com/huanglii"},{"name":"黄俐","username":"黄俐","email":"li.huangli@qq.com","commits":2,"url":"https://github.com/黄俐"}]},"filePathRelative":"style-spec/glyphs.md"}');export{f as comp,g as data};
