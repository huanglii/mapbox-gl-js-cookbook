import{_ as e,r as o,o as c,c as l,a as n,b as s,d as t,e as i}from"./app-WXFCxs9o.js";const u={},r=n("h1",{id:"字体",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#字体","aria-hidden":"true"},"#"),s(" 字体")],-1),k={href:"https://docs.mapbox.com/mapbox-gl-js/style-spec/glyphs/",target:"_blank",rel:"noopener noreferrer"},d=n("p",null,[s("如果图层样式中有使用 "),n("code",null,"text-field"),s(" 属性，则必须设置该属性。")],-1),v={href:"https://studio.mapbox.com/",target:"_blank",rel:"noopener noreferrer"},m=n("code",null,".TTF",-1),b=n("code",null,".OTF",-1),f={href:"https://github.com/mapbox/node-fontnik",target:"_blank",rel:"noopener noreferrer"},h=n("code",null,"PBF",-1),_=i(`<p>使用方法如下：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 克隆项目并安装</span>
<span class="token function">git</span> clone git@github.com:mapbox/node-fontnik.git
<span class="token builtin class-name">cd</span> node-fontnik <span class="token operator">&amp;</span> <span class="token function">npm</span> i
<span class="token comment"># 进入 bin 目录，转换字体文件</span>
<span class="token builtin class-name">cd</span> bin
<span class="token function">node</span> ./build-glyphs /home/fonts/open-sans/OpenSans-Regular.ttf ./glyphs/OpenSans Regular
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>也可使用下面的代码生成：</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">var</span> fontnik <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fontnik&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> fs <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;fs&#39;</span><span class="token punctuation">)</span>
<span class="token keyword">var</span> path <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;path&#39;</span><span class="token punctuation">)</span>

<span class="token keyword">var</span> <span class="token function-variable function">convert</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">fileName<span class="token punctuation">,</span> outputDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">var</span> font <span class="token operator">=</span> fs<span class="token punctuation">.</span><span class="token function">readFileSync</span><span class="token punctuation">(</span>path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> fileName<span class="token punctuation">)</span><span class="token punctuation">)</span>
  <span class="token function">output2pbf</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">255</span><span class="token punctuation">,</span> outputDir<span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">output2pbf</span><span class="token punctuation">(</span><span class="token parameter">font<span class="token punctuation">,</span> start<span class="token punctuation">,</span> end<span class="token punctuation">,</span> outputDir</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token keyword">if</span> <span class="token punctuation">(</span>start <span class="token operator">&gt;</span> <span class="token number">65535</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;done!&#39;</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span>
  <span class="token punctuation">}</span>
  fontnik<span class="token punctuation">.</span><span class="token function">range</span><span class="token punctuation">(</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">font</span><span class="token operator">:</span> font<span class="token punctuation">,</span>
      <span class="token literal-property property">start</span><span class="token operator">:</span> start<span class="token punctuation">,</span>
      <span class="token literal-property property">end</span><span class="token operator">:</span> end<span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
    <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> res</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">var</span> outputFilePath <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">resolve</span><span class="token punctuation">(</span>__dirname <span class="token operator">+</span> <span class="token string">&#39;/&#39;</span> <span class="token operator">+</span> outputDir <span class="token operator">+</span> start <span class="token operator">+</span> <span class="token string">&#39;-&#39;</span> <span class="token operator">+</span> end <span class="token operator">+</span> <span class="token string">&#39;.pbf&#39;</span><span class="token punctuation">)</span>
      fs<span class="token punctuation">.</span><span class="token function">writeFile</span><span class="token punctuation">(</span>outputFilePath<span class="token punctuation">,</span> res<span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          <span class="token function">output2pbf</span><span class="token punctuation">(</span>font<span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> end <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">+</span> <span class="token number">255</span><span class="token punctuation">,</span> outputDir<span class="token punctuation">)</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span><span class="token punctuation">)</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">)</span>
<span class="token punctuation">}</span>

<span class="token function">convert</span><span class="token punctuation">(</span><span class="token string">&#39;./fonts/open-sans/OpenSans-Regular.ttf&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;./glyphs/OpenSans Regular/&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,4),g={href:"https://www.jianshu.com/p/23634e54487e",target:"_blank",rel:"noopener noreferrer"},y={class:"custom-container warning"},w=n("p",{class:"custom-container-title"},"注意",-1),x=n("p",null,"经测试，上面几种方法（包括在 Mapbox Studio 中上传的字体）生成的字体对中文不生效，中文字体还是会显示为默认字体，如下：",-1),S=["src"];function F(p,N){const a=o("ExternalLinkIcon");return c(),l("div",null,[r,n("blockquote",null,[n("p",null,[n("a",k,[s("glyphs"),t(a)])])]),d,n("p",null,[s("如需使用自定义字体，可在 "),n("a",v,[s("Mapbox Studio"),t(a)]),s(" 上传 "),m,s(" 或者 "),b,s(" 字体。也可使用 "),n("a",f,[s("mapbox/node-fontnik"),t(a)]),s(" 工具生成 "),h,s(" 格式字体。")]),_,n("blockquote",null,[n("p",null,[s("参考："),n("a",g,[s("mapbox/node-fontnik 工具使用介绍"),t(a)])])]),n("div",y,[w,x,n("img",{src:p.$withBase("/assets/images/fonts.png"),width:"120"},null,8,S)])])}const q=e(u,[["render",F],["__file","glyphs.html.vue"]]);export{q as default};
