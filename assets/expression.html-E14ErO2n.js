import{_ as r,c as u,a as e,b as a,d as t,e as p,f as n,r as l,o as d}from"./app-COZMOXYE.js";const k={};function m(v,s){const c=l("common-code-view"),i=l("ClientOnly"),o=l("RouteLink");return d(),u("div",null,[s[6]||(s[6]=e(`<h1 id="表达式" tabindex="-1"><a class="header-anchor" href="#表达式"><span>表达式</span></a></h1><p>任何 <code>layout</code> 属性、<code>paint</code> 属性或 <code>filter</code> 的值都可以是表达式（<a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/" target="_blank" rel="noopener noreferrer">expressions</a>）。示例如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;circle-radius&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&quot;interpolate&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;linear&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;zoom&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// when zoom is 0, set each feature&#39;s circle radius to the value of its &quot;rating&quot; property</span></span>
<span class="line">    <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token comment">// when zoom is 10, set each feature&#39;s circle radius to four times the value of its &quot;rating&quot; property</span></span>
<span class="line">    <span class="token number">10</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;*&quot;</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;rating&quot;</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">注意</p><p>在表达式中， <code>layout</code> 属性和 <code>paint</code> 属性有一个很重要的区别。<code>paint</code> 属性，只要缩放级别发生变化，都会重新计算 <code>paint</code> 属性，即使是小数变化，比如在 4.1 - 4.6 之间。而 <code>layout</code> 属性只在整数缩放级别时计算，在 4.1 - 4.6 之间不会发生变化，只有在高于 5 或小于 4 时计算。</p></div><p>以下举例假设要素具有如下属性：</p><div class="language-json line-numbers-mode" data-highlighter="prismjs" data-ext="json" data-title="json"><pre><code><span class="line"><span class="token property">&quot;properties&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;苹果,香蕉&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;有点意思&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;district&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token property">&quot;code&quot;</span><span class="token operator">:</span> <span class="token number">500000</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;重庆市&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;fruit&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;fruits&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;苹果&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;香蕉&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;price&quot;</span><span class="token operator">:</span> <span class="token number">99</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token property">&quot;color&quot;</span><span class="token operator">:</span> <span class="token string">&quot;#F00&quot;</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><iframe src="https://codesandbox.io/embed/mapbox-gl-cookbook-playground-7z3rz3?fontsize=14&amp;hidenavigation=1&amp;module=%2Fsrc%2FApp.vue&amp;theme=light&amp;view=preview" style="width:100%;height:300px;border:0;border-radius:6px;overflow:hidden;" title="mapbox-gl-cookbook-playground" allow="accelerometer; ambient-light-sensor; camera; encrypted-media; geolocation; gyroscope; hid; microphone; midi; payment; usb; vr; xr-spatial-tracking" sandbox="allow-forms allow-modals allow-popups allow-presentation allow-same-origin allow-scripts"></iframe><h2 id="types" tabindex="-1"><a class="header-anchor" href="#types"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#types" target="_blank" rel="noopener noreferrer">Types</a></span></a></h2><p>表达式拥有强大的类型系统，并支持转换和检测。比如，表达式的输入和输出数据类型需和样式规范中的类型一致，在计算表达式时会自动检测，如果检测到错误，会在控制台输出错误提示。</p><h2 id="feature-data" tabindex="-1"><a class="header-anchor" href="#feature-data"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#feature-data" target="_blank" rel="noopener noreferrer">Feature data</a></span></a></h2><h3 id="accumulated" tabindex="-1"><a class="header-anchor" href="#accumulated"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#accumulated" target="_blank" rel="noopener noreferrer">accumulated</a></span></a></h3><p>返回累积的聚合属性的值，只能用于开启聚合的 <code>GeoJSON</code> 源的 <a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/sources/#geojson-clusterProperties" target="_blank" rel="noopener noreferrer">clusterProperties</a> 选项，如：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token comment">// 聚合点会新增 \`sum\` 属性，表示聚合的所有点的 \`value\` 值的和</span></span>
<span class="line">map<span class="token punctuation">.</span><span class="token function">addSource</span><span class="token punctuation">(</span><span class="token string">&#39;points&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&#39;geojson&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">data</span><span class="token operator">:</span> <span class="token string">&#39;/data/point.geojson&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">cluster</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">clusterProperties</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token literal-property property">sum</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token string">&#39;+&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;accumulated&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;sum&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;value&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 要素 value 属性</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">}</span><span class="token punctuation">,</span></span>
<span class="line"><span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>参考：<a href="/mapbox-gl-js-cookbook/data/point/cluster">聚合</a></p></blockquote><h3 id="feature-state" tabindex="-1"><a class="header-anchor" href="#feature-state"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#feature-state" target="_blank" rel="noopener noreferrer">feature-state</a></span></a></h3><p>要素状态，要素状态不是数据的某一属性，需要通过编码对某要素设置，如给要素设置 <code>hover</code> 状态（如下），然后在表达式中即可使用：<code>[&#39;feature-state&#39;, &#39;hover&#39;]</code></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line">map<span class="token punctuation">.</span><span class="token function">setFeatureState</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">source</span><span class="token operator">:</span> <span class="token string">&#39;states&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">id</span><span class="token operator">:</span> hoveredStateId <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">hover</span><span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span><span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><blockquote><p>示例：<a href="https://docs.mapbox.com/mapbox-gl-js/example/hover-styles/" target="_blank" rel="noopener noreferrer">Create a hover effect</a></p></blockquote><h2 id="lookup" tabindex="-1"><a class="header-anchor" href="#lookup"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#lookup" target="_blank" rel="noopener noreferrer">Lookup</a></span></a></h2><h3 id="at" tabindex="-1"><a class="header-anchor" href="#at"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#at" target="_blank" rel="noopener noreferrer">at</a></span></a></h3><p>从数组中检索项目。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;to-string&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;at&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fruits&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment">// 香蕉</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h3 id="get" tabindex="-1"><a class="header-anchor" href="#get"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#get" target="_blank" rel="noopener noreferrer">get</a></span></a></h3><p>获取要素属性，如果提供了第二个参数，则判断第二个参数对象。语法如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> string<span class="token punctuation">]</span><span class="token operator">:</span> value</span>
<span class="line"></span>
<span class="line"><span class="token punctuation">[</span><span class="token string">&quot;get&quot;</span><span class="token punctuation">,</span> string<span class="token punctuation">,</span> object<span class="token punctuation">]</span><span class="token operator">:</span> value</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>示例：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span> <span class="token comment">// 有点意思</span></span>
<span class="line"><span class="token comment">// 对象</span></span>
<span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;literal&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;重庆市&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token comment">// 重庆市</span></span>
<span class="line"><span class="token comment">// 要素属性对象</span></span>
<span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;object&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;district&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token comment">// 重庆市</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="has" tabindex="-1"><a class="header-anchor" href="#has"><span>has</span></a></h3><p>判断当前要素是否存在属性值，如果提供了第二个参数，则判断第二个参数对象。如使用要素的 <code>color</code> 属性设置注记颜色，没有该属性则使用 <code>#000</code>：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;text-color&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string">&#39;case&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;has&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;color&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&#39;#000&#39;</span></span>
<span class="line"><span class="token punctuation">]</span> <span class="token comment">// #F00</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="in" tabindex="-1"><a class="header-anchor" href="#in"><span>in</span></a></h3><p>判断输入值（字符串或数组）中是否存在关键字。如判断 <code>title</code> 属性中是否存在 <code>意思</code> 子串和 <code>fruits</code> 属性中是否存在 <code>苹果</code> 项：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&#39;in&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;意思&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span> <span class="token comment">// true</span></span>
<span class="line"><span class="token punctuation">[</span><span class="token string">&#39;in&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;苹果&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fruits&#39;</span><span class="token punctuation">]</span> <span class="token comment">// true</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="slice" tabindex="-1"><a class="header-anchor" href="#slice"><span>slice</span></a></h3><p>数组或字符串切片</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;slice&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;title&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token comment">// 点意</span></span>
<span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;slice&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fruits&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">// [&quot;香蕉&quot;]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="decision" tabindex="-1"><a class="header-anchor" href="#decision"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#decision" target="_blank" rel="noopener noreferrer">Decision</a></span></a></h2><p>在表达式中，可使用常用的条件逻辑，比如：<code>&quot;if/then/else&quot;</code> 的逻辑可使用 <code>&#39;case&#39;</code> 表达式，如需将输入的特定值映射不同的输出，可使用 <code>&#39;match&#39;</code> 表达式。</p><h3 id="case" tabindex="-1"><a class="header-anchor" href="#case"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#case" target="_blank" rel="noopener noreferrer">case</a></span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;circle-color&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string">&#39;case&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;#F00&#39;</span><span class="token punctuation">,</span> <span class="token comment">// if ＜ 50 红色</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;price&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;#0F0&#39;</span><span class="token punctuation">,</span> <span class="token comment">// else if ＜ 100 绿色</span></span>
<span class="line">  <span class="token string">&#39;#00F&#39;</span> <span class="token comment">// else 蓝色</span></span>
<span class="line"><span class="token punctuation">]</span> <span class="token comment">// 因为 price = 99，所以最终会显示为绿色。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="coalesce" tabindex="-1"><a class="header-anchor" href="#coalesce"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#coalesce" target="_blank" rel="noopener noreferrer">coalesce</a></span></a></h3><p>依次计算每一个表达式，直到得到一个有效值。比如下面表达式中，先取 <code>name_zh-Hans</code> 属性，如果不存在或为空，再取 <code>name_en</code> ，如果仍然无效，就取 <code>name</code>。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string">&#39;coalesce&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name_zh-Hans&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name_en&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="match" tabindex="-1"><a class="header-anchor" href="#match"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#match" target="_blank" rel="noopener noreferrer">match</a></span></a></h3><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;icon-image&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">  <span class="token string">&#39;match&#39;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;type&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token string">&#39;fruit&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;fruit-icon&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 类型是 fruit，显示 fruit-icon</span></span>
<span class="line">  <span class="token string">&#39;vegetable&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;vegetable-icon&#39;</span><span class="token punctuation">,</span> <span class="token comment">// 类型是 vegetable vegetable-icon</span></span>
<span class="line">  <span class="token string">&#39;default-icon&#39;</span> <span class="token comment">// 无匹配时，默认图标</span></span>
<span class="line"><span class="token punctuation">]</span> <span class="token comment">// 因为 type = 99，所以最终会显示 fruit-icon。</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="within" tabindex="-1"><a class="header-anchor" href="#within"><span><a href="https://docs.mapbox.com/style-spec/reference/expressions/#within" target="_blank" rel="noopener noreferrer">within</a></span></a></h3><p>如果要素完全包含在输入的多边形内，则返回 <code>true</code>，否则返回 <code>false</code>。输入可以是类型为 Polygon、MultiPolygon、Feature 或 FeatureCollection 的有效 GeoJSON，仅支持 <code>Point</code> 和 <code>LineString</code>。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&quot;filter&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token string-property property">&quot;coordinates&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">      <span class="token punctuation">[</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">        <span class="token punctuation">[</span><span class="token number">107</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">]</span></span>
<span class="line">      <span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token string-property property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;Polygon&quot;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,48)),a(i,null,{default:t(()=>[a(c,{name:"expression-within"})]),_:1}),s[7]||(s[7]=e(`<h2 id="ramps-scales-curves" tabindex="-1"><a class="header-anchor" href="#ramps-scales-curves"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#ramps-scales-curves" target="_blank" rel="noopener noreferrer">Ramps, scales, curves</a></span></a></h2><h3 id="interpolate" tabindex="-1"><a class="header-anchor" href="#interpolate"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#interpolate" target="_blank" rel="noopener noreferrer">interpolate</a></span></a></h3><p>通过在输入和输出值对之间插值来产生连续、平滑的结果。支持 <code>linear</code>、<code>exponential</code> 和 <code>cubic-bezier</code>，<code>stops</code> 数值必须严格增序。语法如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&quot;interpolate&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">interpolation</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;linear&quot;</span><span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token string">&quot;exponential&quot;</span><span class="token punctuation">,</span> base<span class="token punctuation">]</span> <span class="token operator">|</span> <span class="token punctuation">[</span><span class="token string">&quot;cubic-bezier&quot;</span><span class="token punctuation">,</span> x1<span class="token punctuation">,</span> y1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> y2<span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">stop_input_1</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">stop_output_1</span><span class="token operator">:</span> OutputType<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">stop_input_n</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">stop_output_n</span><span class="token operator">:</span> OutputType<span class="token punctuation">,</span> <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token function">OutputType</span> <span class="token punctuation">(</span>number<span class="token punctuation">,</span> array<span class="token operator">&lt;</span>number<span class="token operator">&gt;</span><span class="token punctuation">,</span> or Color<span class="token punctuation">)</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>interpolate-hcl</code> 和 <code>interpolate-lab</code> 与其类似，但是输出必须为 <code>Color</code>，前者在 Hue-Chroma-Luminance 色彩空间插值，后者在 CIELAB 色彩空间插值。</p>`,5)),p("blockquote",null,[p("p",null,[s[2]||(s[2]=n("参考：")),a(o,{to:"/data/thematic.html#%E6%AF%94%E4%BE%8B%E7%AC%A6%E5%8F%B7%E5%9B%BE"},{default:t(()=>s[0]||(s[0]=[n("比例符号图")])),_:1}),s[3]||(s[3]=n("、")),a(o,{to:"/advance/track.html#%E5%8F%B0%E9%A3%8E%E8%B7%AF%E5%BE%84"},{default:t(()=>s[1]||(s[1]=[n("台风路径")])),_:1})])]),s[8]||(s[8]=e(`<h3 id="step" tabindex="-1"><a class="header-anchor" href="#step"><span><a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#step" target="_blank" rel="noopener noreferrer">step</a></span></a></h3><p>通过评估由输入和输出值对定义的分段常数函数，产生离散的阶梯式结果。<code>stops</code> 数值必须严格增序。语法如下：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&quot;step&quot;</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">input</span><span class="token operator">:</span> number<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">stop_output_0</span><span class="token operator">:</span> OutputType<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">stop_input_1</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">stop_output_1</span><span class="token operator">:</span> OutputType<span class="token punctuation">,</span></span>
<span class="line">  <span class="token literal-property property">stop_input_n</span><span class="token operator">:</span> number<span class="token punctuation">,</span> <span class="token literal-property property">stop_output_n</span><span class="token operator">:</span> OutputType<span class="token punctuation">,</span> <span class="token operator">...</span></span>
<span class="line"><span class="token punctuation">]</span><span class="token operator">:</span> OutputType</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3)),p("blockquote",null,[p("p",null,[s[5]||(s[5]=n("参考：")),a(o,{to:"/data/thematic.html#%E7%82%B9%E5%AF%86%E5%BA%A6%E5%9B%BE"},{default:t(()=>s[4]||(s[4]=[n("点密度图")])),_:1})])]),s[9]||(s[9]=e(`<h2 id="variable-binding" tabindex="-1"><a class="header-anchor" href="#variable-binding"><span>Variable binding</span></a></h2><ul><li>let 绑定变量</li><li>var 引用 <code>let</code> 绑定的变量</li></ul><p>如：<code>name</code> 字段值有 <code>&#39;香蕉&#39;</code>、<code>&#39;苹果,香蕉&#39;</code> 等以逗号分隔的词，仅展示第一个值：</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">{</span></span>
<span class="line">  <span class="token string-property property">&#39;text-field&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span></span>
<span class="line">    <span class="token string">&#39;let&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;idx&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;index-of&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;,&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">    <span class="token punctuation">[</span></span>
<span class="line">      <span class="token string">&#39;case&#39;</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token string">&#39;&lt;&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;var&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;idx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">      <span class="token punctuation">[</span><span class="token string">&#39;slice&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;name&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;var&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;idx&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span></span>
<span class="line">    <span class="token punctuation">]</span><span class="token punctuation">,</span></span>
<span class="line">  <span class="token punctuation">]</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="string" tabindex="-1"><a class="header-anchor" href="#string"><span>String</span></a></h2><ul><li>downcase 转小写</li><li>upcase 转大写</li></ul><h2 id="color" tabindex="-1"><a class="header-anchor" href="#color"><span>Color</span></a></h2><ul><li>rgb</li><li>rgba</li></ul><h2 id="math" tabindex="-1"><a class="header-anchor" href="#math"><span>Math</span></a></h2><p>支持基本的数学运算，详见：<a href="https://docs.mapbox.com/mapbox-gl-js/style-spec/expressions/#math" target="_blank" rel="noopener noreferrer">Math</a></p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token string-property property">&#39;circle-radius&#39;</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;/&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token string">&#39;get&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;gdp&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">]</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="zoom" tabindex="-1"><a class="header-anchor" href="#zoom"><span>Zoom</span></a></h2><p>获取当前缩放级别，仅用于 <code>step</code> 或 <code>interpolate</code> 表达式的输入。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&#39;zoom&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> number</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h2 id="heatmap" tabindex="-1"><a class="header-anchor" href="#heatmap"><span>Heatmap</span></a></h2><p>获取热力图图层中像素的核密度估计，只能用于 <code>heatmap-color</code> 属性。</p><div class="language-javascript line-numbers-mode" data-highlighter="prismjs" data-ext="js" data-title="js"><pre><code><span class="line"><span class="token punctuation">[</span><span class="token string">&#39;heatmap-density&#39;</span><span class="token punctuation">]</span><span class="token operator">:</span> number</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>`,17))])}const h=r(k,[["render",m],["__file","expression.html.vue"]]),b=JSON.parse('{"path":"/style-spec/expression.html","title":"表达式","lang":"zh-CN","frontmatter":{},"headers":[{"level":2,"title":"Types","slug":"types","link":"#types","children":[]},{"level":2,"title":"Feature data","slug":"feature-data","link":"#feature-data","children":[{"level":3,"title":"accumulated","slug":"accumulated","link":"#accumulated","children":[]},{"level":3,"title":"feature-state","slug":"feature-state","link":"#feature-state","children":[]}]},{"level":2,"title":"Lookup","slug":"lookup","link":"#lookup","children":[{"level":3,"title":"at","slug":"at","link":"#at","children":[]},{"level":3,"title":"get","slug":"get","link":"#get","children":[]},{"level":3,"title":"has","slug":"has","link":"#has","children":[]},{"level":3,"title":"in","slug":"in","link":"#in","children":[]},{"level":3,"title":"slice","slug":"slice","link":"#slice","children":[]}]},{"level":2,"title":"Decision","slug":"decision","link":"#decision","children":[{"level":3,"title":"case","slug":"case","link":"#case","children":[]},{"level":3,"title":"coalesce","slug":"coalesce","link":"#coalesce","children":[]},{"level":3,"title":"match","slug":"match","link":"#match","children":[]},{"level":3,"title":"within","slug":"within","link":"#within","children":[]}]},{"level":2,"title":"Ramps, scales, curves","slug":"ramps-scales-curves","link":"#ramps-scales-curves","children":[{"level":3,"title":"interpolate","slug":"interpolate","link":"#interpolate","children":[]},{"level":3,"title":"step","slug":"step","link":"#step","children":[]}]},{"level":2,"title":"Variable binding","slug":"variable-binding","link":"#variable-binding","children":[]},{"level":2,"title":"String","slug":"string","link":"#string","children":[]},{"level":2,"title":"Color","slug":"color","link":"#color","children":[]},{"level":2,"title":"Math","slug":"math","link":"#math","children":[]},{"level":2,"title":"Zoom","slug":"zoom","link":"#zoom","children":[]},{"level":2,"title":"Heatmap","slug":"heatmap","link":"#heatmap","children":[]}],"git":{"updatedTime":1695215746000,"contributors":[{"name":"huanglii","username":"huanglii","email":"naivemap@163.com","commits":6,"url":"https://github.com/huanglii"},{"name":"huangli","username":"huangli","email":"naivemap@163.com","commits":1,"url":"https://github.com/huangli"},{"name":"yangjiao","username":"yangjiao","email":"","commits":1,"url":"https://github.com/yangjiao"},{"name":"huanglii","username":"huanglii","email":"li.huangli@qq.com","commits":4,"url":"https://github.com/huanglii"},{"name":"黄俐","username":"黄俐","email":"li.huangli@qq.com","commits":5,"url":"https://github.com/黄俐"},{"name":"huanglii","username":"huanglii","email":"849151701@qq.com","commits":2,"url":"https://github.com/huanglii"}]},"filePathRelative":"style-spec/expression.md"}');export{h as comp,b as data};
